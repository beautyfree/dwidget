// @generated by protobuf-ts 2.9.1 with parameter optimize_code_size
// @generated from protobuf file "etherean.proto" (package "etherean", syntax proto3)
// tslint:disable
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message etherean.LidoRewardsRequest
 */
export interface LidoRewardsRequest {
    /**
     * @generated from protobuf field: string user_wallet = 1;
     */
    userWallet: string; // ethereum wallet address
    /**
     * @generated from protobuf field: uint32 limit = 2;
     */
    limit: number; // count of days for calculate rewards e.g. 1/7/31
}
/**
 * @generated from protobuf message etherean.LidoRewardsReply
 */
export interface LidoRewardsReply {
    /**
     * @generated from protobuf field: string rewards = 1;
     */
    rewards: string;
}
// @generated message type with reflection information, may provide speed optimized methods
class LidoRewardsRequest$Type extends MessageType<LidoRewardsRequest> {
    constructor() {
        super("etherean.LidoRewardsRequest", [
            { no: 1, name: "user_wallet", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "limit", kind: "scalar", T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message etherean.LidoRewardsRequest
 */
export const LidoRewardsRequest = new LidoRewardsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LidoRewardsReply$Type extends MessageType<LidoRewardsReply> {
    constructor() {
        super("etherean.LidoRewardsReply", [
            { no: 1, name: "rewards", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message etherean.LidoRewardsReply
 */
export const LidoRewardsReply = new LidoRewardsReply$Type();
/**
 * @generated ServiceType for protobuf service etherean.EthereanGrpc
 */
export const EthereanGrpc = new ServiceType("etherean.EthereanGrpc", [
    { name: "GetLidoRewards", options: {}, I: LidoRewardsRequest, O: LidoRewardsReply }
]);
